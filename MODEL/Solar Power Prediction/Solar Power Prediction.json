{"main":"mg9xjzn78kuduv3j","models":{"mg9xjzn78kuduv3j":{"variables":{},"variableRef":[],"innerModels":{},"inData":[],"outData":[],"type":"data","param":{},"functions":[{"persist-mode":"auto","func":"brightics.function.io$load13889","name":"brightics.function.io$load","param":{"partial_path":["/brightics@samsung.com/upload/solar_power_2204.csv"]},"meta":{"table":{"type":"table"}},"context":"python","version":"3.6","outputs":{"table":"tbz336hj5j4bemr9"},"fid":"fmn578mrb3z8ffzu","label":"Load :: 태양광 발전량 data","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["trx4y2d2b9epndwj"],"models":[],"images":[]},"outputs":{"df":"t9qm9fygg5h8u6mh"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\nfrom datetime import datetime\n\ndf = inputs[0]\ndf['datetime'] = pd.to_datetime(df['datetime'])\n\ndf = df.loc[\n  ~((df['datetime'] >= datetime(2021,4,1)) & (df['datetime'] <= datetime(2021,4,6)))\n  & ~((df['datetime'] >= datetime(2021,7,12)) & (df['datetime'] <= datetime(2021,7,13)))\n  & ~((df['datetime'] >= datetime(2021,11,5)) & (df['datetime'] <= datetime(2021,11,9)))\n  & ~((df['datetime'] >= datetime(2021,11,17)) & (df['datetime'] <= datetime(2021,12,2)))\n]\ndf['datetime'] = df['datetime'].astype('str')"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"fkxxe962tqpfkq7c","label":"Python Script : 데이터 오류 제거","persist":true,"skip":false},{"persist-mode":"auto","func":"simpleFilterPython","name":"brightics.function.manipulation$simple_filter","context":"python","version":"3.6","param":{"main_operator":"or","input_cols":["target"],"operators":["<="],"operands":["60000"]},"inputs":{"table":"tbz336hj5j4bemr9"},"outputs":{"out_table":"trx4y2d2b9epndwj"},"meta":{"table":{"type":"table"},"out_table":{"type":"table"}},"fid":"fgc4aazrsejy7vdz","label":"Filter: 이상치 제거","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["t9qm9fygg5h8u6mh"],"models":[],"images":[]},"outputs":{"df_1h":"tvcdrtvhtfyxy582"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\n\ndf = inputs[0]\n\ndf.set_index(pd.to_datetime(df['datetime']), inplace=True)\ndf_1h = df.resample(rule='1H').mean()\ndf_1h = df_1h.reset_index()\ndf_1h['datetime'] = df_1h['datetime'].astype(str)"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df_1h":{"type":"table"}},"fid":"fcmep5kshntn5fn3","label":"Python Script: 시간당 평균값","persist":true,"skip":false},{"persist-mode":"auto","func":"queryExecutorPython","name":"brightics.function.transform$sql_execute","context":"python","version":"3.6","param":{"query":"SELECT * from  #{DF(0)} where datetime < '2022-03-01'"},"inputs":{"tables":["tcsh579hdpwymw32"]},"outputs":{"out_table":"tvzpakvy87h8t4d2"},"meta":{"tables":{"type":"table","range":{"min":1,"max":10}},"out_table":{"type":"table"}},"fid":"f7tth8gaut35xe9j","label":"Query Executor: Train 구간","persist":true,"skip":false},{"persist-mode":"auto","func":"queryExecutorPython","name":"brightics.function.transform$sql_execute","context":"python","version":"3.6","param":{"query":"SELECT * from  #{DF(0)} where datetime > '2022-03-01'"},"inputs":{"tables":["t222wuur7mdtzv4f"]},"outputs":{"out_table":"tqveedj8puu49wba"},"meta":{"tables":{"type":"table","range":{"min":1,"max":10}},"out_table":{"type":"table"}},"fid":"fmezk7gj6aeyq8rt","label":"Query Executor: Validation 구간","persist":true,"skip":false},{"persist-mode":"auto","context":"python","func":"merge","name":"brightics.function.transform$join","version":"3.6","inputs":{"left_table":"tvzpakvy87h8t4d2","right_table":"tccftbbf9drmr8ct"},"outputs":{"table":"t8cjukxcttf29ydr"},"meta":{"left_table":{"type":"table"},"right_table":{"type":"table"},"table":{"type":"table"}},"param":{"left_on":["datetime"],"right_on":["datetime"],"how":"inner","sort":"false"},"fid":"fjh7kh2dy8hwuc72","label":"Join","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["t8cjukxcttf29ydr"],"models":[],"images":[]},"outputs":{"df":"tf2gtccfzh98qg4z"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\ndf = inputs[0]\ndf['_datetime'] = pd.to_datetime(df['datetime'])\ndf['month'] = df['_datetime'].apply(lambda x: x.month)\ndf['day'] = df['_datetime'].apply(lambda x: x.day)\ndf['hour'] = df['_datetime'].apply(lambda x: x.hour)\ndf = df.drop(columns=['_datetime'])"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"fztr6cvvktkbhpm5","label":"Python Script: 월,일,시간 추가","persist":true,"skip":false},{"persist-mode":"auto","context":"python","func":"merge","name":"brightics.function.transform$join","version":"3.6","inputs":{"left_table":"tqveedj8puu49wba","right_table":"tccftbbf9drmr8ct"},"outputs":{"table":"t2uhmyet2mpp2usd"},"meta":{"left_table":{"type":"table"},"right_table":{"type":"table"},"table":{"type":"table"}},"param":{"left_on":["datetime"],"right_on":["datetime"],"how":"inner","sort":"false"},"fid":"fhdwenv24g6p34rd","label":"Join","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["t2uhmyet2mpp2usd"],"models":[],"images":[]},"outputs":{"df":"tjsphyg25zefuaee"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\ndf = inputs[0]\ndf['_datetime'] = pd.to_datetime(df['datetime'])\ndf['month'] = df['_datetime'].apply(lambda x: x.month)\ndf['day'] = df['_datetime'].apply(lambda x: x.day)\ndf['hour'] = df['_datetime'].apply(lambda x: x.hour)\ndf = df.drop(columns=['_datetime'])"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"fz44tgcm5nedprn9","label":"Python Script: 월,일,시간 추가","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.transform$delete_missing_data","name":"brightics.function.transform$delete_missing_data","param":{"row_or_column":"index","input_cols":["target"]},"meta":{"out_table":{"type":"table","desc":"Output table for Delete Missing Value. "},"table":{"type":"table","desc":"Data in a Table. ","optional":false}},"context":"python","version":"3.6","inputs":{"table":"tvcdrtvhtfyxy582"},"outputs":{"out_table":"tccftbbf9drmr8ct"},"fid":"fgfrj77z3ybgfee9","label":"Delete Missing Data","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["twb7nckpb3r54ysb"],"models":[],"images":[]},"outputs":{"df":"txfftyhfvrqrbfa3"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\ndf = inputs[0]\ndf['_datetime'] = pd.to_datetime(df['datetime'])\ndf['month'] = df['_datetime'].apply(lambda x: x.month)\ndf['day'] = df['_datetime'].apply(lambda x: x.day)\ndf['hour'] = df['_datetime'].apply(lambda x: x.hour)\ndf = df.drop(columns=['_datetime'])"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"fgxzqhqvbc2fpfbm","label":"Python Script: 월,일,시간 추가","persist":true,"skip":false},{"persist-mode":"auto","func":"queryExecutorPython","name":"brightics.function.transform$sql_execute","context":"python","version":"3.6","param":{"query":"SELECT * from  #{DF(0)} where datetime >= '2022-05-01' and datetime < '2022-07-01'"},"inputs":{"tables":["t222wuur7mdtzv4f"]},"outputs":{"out_table":"twb7nckpb3r54ysb"},"meta":{"tables":{"type":"table","range":{"min":1,"max":10}},"out_table":{"type":"table"}},"fid":"fn69v42qd5hkdw7c","label":"Query Executor: prediction 구간","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.io$load13889","name":"brightics.function.io$load","param":{"partial_path":["/brightics@samsung.com/upload/solar_weather_actual_0810.csv"]},"meta":{"table":{"type":"table"}},"context":"python","version":"3.6","outputs":{"table":"tgk62ghe4bvshtkf"},"fid":"fjgydpye6xuvqp6s","label":"Load: 기상 관측 데이터","persist":true,"skip":false},{"persist-mode":"auto","func":"selectColumnPython","name":"brightics.function.transform$select_column","context":"python","version":"3.6","param":{"input_cols":["datetime","temperature","windspeed","winddirection","humidity","일조","일사","전운량"],"output_cols":["datetime","temperature","windspeed","winddirection","humidity","일조","일사","전운량"],"output_types":["string","double","double","double","double","double","double","double"]},"inputs":{"table":"tgk62ghe4bvshtkf"},"outputs":{"out_table":"tccruxh4bm5wb9sb"},"meta":{"table":{"type":"table"},"out_table":{"type":"table"}},"fid":"fxwgz6a7afptg4g5","label":"Select Column","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["tccruxh4bm5wb9sb"],"models":[],"images":[]},"outputs":{"df":"tyw33xyyzfskw4be"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\ndf = inputs[0]\ndf.fillna(0, inplace = True)\ndf['datetime'] = df['datetime'].apply(lambda x: x + ':00')\ndf['datetime'] = pd.to_datetime(df['datetime'])\ndf['datetime'] = df['datetime'].astype('str')"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"f3zaszmkdddfex9s","label":"Python Script: 시간 서식 맞추기","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.transform$delete_missing_data","name":"brightics.function.transform$delete_missing_data","param":{"row_or_column":"index","input_cols":["datetime","temperature","windspeed","winddirection","humidity"]},"meta":{"out_table":{"type":"table","desc":"Output table for Delete Missing Value. "},"table":{"type":"table","desc":"Data in a Table. ","optional":false}},"context":"python","version":"3.6","inputs":{"table":"tyw33xyyzfskw4be"},"outputs":{"out_table":"tcsh579hdpwymw32"},"fid":"fqugq4mxe779zp6y","label":"Delete Missing Data","persist":true,"skip":false},{"persist-mode":"auto","func":"queryExecutorPython","name":"brightics.function.transform$sql_execute","context":"python","version":"3.6","param":{"query":"SELECT * from  #{DF(0)} where datetime < '2022-05-01'"},"inputs":{"tables":["tcsh579hdpwymw32"]},"outputs":{"out_table":"tk5swdazr55fd6gv"},"meta":{"tables":{"type":"table","range":{"min":1,"max":10}},"out_table":{"type":"table"}},"fid":"fyvd9xyk36q8e3b2","label":"Query Executor: train 구간","persist":true,"skip":false},{"persist-mode":"auto","context":"python","func":"merge","name":"brightics.function.transform$join","version":"3.6","inputs":{"left_table":"tk5swdazr55fd6gv","right_table":"tccftbbf9drmr8ct"},"outputs":{"table":"tkbju32akt2bxvpm"},"meta":{"left_table":{"type":"table"},"right_table":{"type":"table"},"table":{"type":"table"}},"param":{"left_on":["datetime"],"right_on":["datetime"],"how":"inner","sort":"false"},"fid":"fx49hyj2extxu74f","label":"Join","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["tkbju32akt2bxvpm"],"models":[],"images":[]},"outputs":{"df":"t6phgdqd6xztbxtd"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\ndf = inputs[0]\ndf['_datetime'] = pd.to_datetime(df['datetime'])\ndf['month'] = df['_datetime'].apply(lambda x: x.month)\ndf['day'] = df['_datetime'].apply(lambda x: x.day)\ndf['hour'] = df['_datetime'].apply(lambda x: x.hour)\ndf = df.drop(columns=['_datetime'])"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"fx24d4nknvwudnjc","label":"Python Script: 월,일,시간 추가","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.regression$xgb_regression_train","name":"brightics.function.regression$xgb_regression_train","param":{"importance_type":"gain","feature_cols":["temperature","windspeed","humidity","일조","일사","전운량","winddirection_sin","winddirection_cos","hour_cos","hour_sin","day_cos","day_sin","month_cos","month_sin"],"label_col":"target"},"meta":{"table":{"type":"table"},"model":{"type":"model"}},"context":"python","version":"3.6","inputs":{"table":"tn22bhwxc9r4yg2u"},"outputs":{"model":"tfj3jxx3v82wsr98"},"fid":"fyt89jqntftb5nev","label":"XGB Regression Train","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.regression$xgb_regression_predict","name":"brightics.function.regression$xgb_regression_predict","param":{},"meta":{"table":{"type":"table"},"model":{"type":"model"},"out_table":{"type":"table"}},"context":"python","version":"3.6","inputs":{"table":"tqprn3dc7vfhy84t","model":"tfj3jxx3v82wsr98"},"outputs":{"out_table":"tgsufpayp77xt7mt"},"fid":"f2e2ze6gk2bckdwm","label":"XGB Regression Predict","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["tgsufpayp77xt7mt"],"models":[],"images":[]},"outputs":{"df":"t4peqtg8snakjm43"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport pandas as pd\n\ndf = inputs[0]\n\nl = ['21', '22', '23', '00', '01', '02', '03', '04']\nfor i in range(len(df)):\n    if df['datetime'][i][11:13] in l:\n        df['prediction'][i] = 0\n\t\t\ndf.loc[df['prediction'] <0 , 'prediction'] = 0"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"df":{"type":"table"}},"fid":"f6atvcncnwe4gsme","label":"Python Script","persist":true,"skip":false},{"persist-mode":"auto","func":"selectColumnPython","name":"brightics.function.transform$select_column","context":"python","version":"3.6","param":{"input_cols":["datetime","prediction"],"output_cols":["datetime","prediction"],"output_types":["string","string"]},"inputs":{"table":"t4peqtg8snakjm43"},"outputs":{"out_table":"trtg9yjct2zz84za"},"meta":{"table":{"type":"table"},"out_table":{"type":"table"}},"fid":"fdsubpnkprxf9rkg","label":"Select Column: 제출용","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.io$load13889","name":"brightics.function.io$load","param":{"partial_path":["/brightics@samsung.com/upload/solar_predict_new.csv"]},"meta":{"table":{"type":"table"}},"context":"python","version":"3.6","outputs":{"table":"t222wuur7mdtzv4f"},"fid":"ff4vjpbgyneha2vn","label":"Load: 예보 데이터","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.extraction$scale","name":"brightics.function.extraction$scale","param":{"scaler":"StandardScaler","input_cols":["일조","일사","temperature","windspeed","winddirection","humidity","전운량"],"suffix":"_robust"},"meta":{"table":{"type":"table","desc":"Data in a table","optional":false},"out_table":{"type":"table","desc":""},"model":{"type":"model","desc":"Normalized data"}},"context":"python","version":"3.6","inputs":{"table":"tf2gtccfzh98qg4z"},"outputs":{"out_table":"tksqemsmxm6st93q","model":"t6vs4bgf9xg6ppmg"},"fid":"fbnygzrhvfgd32kh","label":"Normalization","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.extraction$scale","name":"brightics.function.extraction$scale","param":{"scaler":"StandardScaler","input_cols":["일조","일사","temperature","windspeed","winddirection","humidity","전운량"],"suffix":"_robust"},"meta":{"table":{"type":"table","desc":"Data in a table","optional":false},"out_table":{"type":"table","desc":""},"model":{"type":"model","desc":"Normalized data"}},"context":"python","version":"3.6","inputs":{"table":"tjsphyg25zefuaee"},"outputs":{"out_table":"tr6zg7b94mdjkk2f","model":"t3frcvxvncphzhtb"},"fid":"fp3avynaubamb9q7","label":"Normalization","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["tksqemsmxm6st93q"],"models":["t6vs4bgf9xg6ppmg"],"images":[]},"outputs":{"X_2":"ttc9ms6wd39fhat6","plt":"tx4za47pdmgvn29z"},"param":{"script":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import date\nfrom sklearn.preprocessing import FunctionTransformer\n\ndef sin_transformer(period):\n    return FunctionTransformer(lambda x: np.sin(x / period * 2 * np.pi))\n  \ndef cos_transformer(period):\n    return FunctionTransformer(lambda x: np.cos(x / period * 2 * np.pi))\n\nX_2 = inputs[0]\n\nX_2[\"month_sin\"] = sin_transformer(12).fit_transform(X_2[[\"month\"]])\nX_2[\"month_cos\"] = cos_transformer(12).fit_transform(X_2[[\"month\"]])\n\nX_2[\"day_sin\"] = sin_transformer(30).fit_transform(X_2[[\"day\"]])\nX_2[\"day_cos\"] = cos_transformer(30).fit_transform(X_2[[\"day\"]])\n\nX_2[\"hour_sin\"] = sin_transformer(24).fit_transform(X_2[[\"hour\"]])\nX_2[\"hour_cos\"] = cos_transformer(24).fit_transform(X_2[[\"hour\"]])\n\nX_2[\"winddirection_sin\"] = sin_transformer(360).fit_transform(X_2[[\"winddirection\"]])\nX_2[\"winddirection_cos\"] = cos_transformer(360).fit_transform(X_2[[\"winddirection\"]])\n\nfig, ax = plt.subplots(3, 1, sharex=True, figsize=(300,8))\nX_2[[\"month_sin\", \"month_cos\"]].plot(ax=ax[0])\nX_2[[\"day_sin\", \"day_cos\"]].plot(ax=ax[1])\nX_2[[\"winddirection_sin\", \"winddirection_cos\"]].plot(ax=ax[2])\nplt.suptitle(\"Cyclical encoding with sine/cosine transformation\");"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"X_2":{"type":"table"},"plt":{"type":"image"}},"fid":"fstzq9mfw33w2a2n","label":"Python Script","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.regression$xgb_regression_train","name":"brightics.function.regression$xgb_regression_train","param":{"importance_type":"gain","feature_cols":["hour_cos","hour_sin","day_cos","day_sin","month_cos","month_sin","winddirection_sin","winddirection_cos","temperature","windspeed","winddirection","humidity","일조","일사","전운량"],"label_col":"target"},"meta":{"table":{"type":"table"},"model":{"type":"model"}},"context":"python","version":"3.6","inputs":{"table":"ttc9ms6wd39fhat6"},"outputs":{"model":"t48bmfmyffrnggn9"},"fid":"fyw2fsszjw2xck8q","label":"XGB Regression Train","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.regression$xgb_regression_predict","name":"brightics.function.regression$xgb_regression_predict","param":{},"meta":{"table":{"type":"table"},"model":{"type":"model"},"out_table":{"type":"table"}},"context":"python","version":"3.6","inputs":{"table":"t75hgpcvudpygjt2","model":"t48bmfmyffrnggn9"},"outputs":{"out_table":"txex5hdq9rnbtnp5"},"fid":"f2ymk7uukbu65bp5","label":"XGB Regression Predict","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["txex5hdq9rnbtnp5"],"models":[],"images":[]},"outputs":{"err":"t5dwuh5arc7kvpxd"},"param":{"script":"#\n#   NOTE : Enter \"Out Table Alias\"\n#   ex)\n#       inputDataframe = inputs[0]\n#       result = inputDataframe\n#\nimport numpy as np\n\n# Define NMAE loss function\ndef NMAE(observed, pred, nominal):\n    absolute_error = np.abs(observed - pred)\n    absolute_error /= nominal\n    target_idx = np.where(observed >= nominal*0.1)\n\n    return 100 * absolute_error[target_idx].mean()\n  \n  \ndf = inputs[0]\n\nerr = NMAE(df['target'].values, df['prediction'].values, 1100)\n"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"err":{"type":"model"}},"fid":"fxdq642kabkz36tt","label":"Python Script: NMAE","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["tr6zg7b94mdjkk2f"],"models":["t3frcvxvncphzhtb"],"images":[]},"outputs":{"X_2":"t75hgpcvudpygjt2","plt":"tcmj3b4vxd8nh9nw"},"param":{"script":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import date\nfrom sklearn.preprocessing import FunctionTransformer\n\ndef sin_transformer(period):\n    return FunctionTransformer(lambda x: np.sin(x / period * 2 * np.pi))\n  \ndef cos_transformer(period):\n    return FunctionTransformer(lambda x: np.cos(x / period * 2 * np.pi))\n\nX_2 = inputs[0]\n\nX_2[\"month_sin\"] = sin_transformer(12).fit_transform(X_2[[\"month\"]])\nX_2[\"month_cos\"] = cos_transformer(12).fit_transform(X_2[[\"month\"]])\n\nX_2[\"day_sin\"] = sin_transformer(30).fit_transform(X_2[[\"day\"]])\nX_2[\"day_cos\"] = cos_transformer(30).fit_transform(X_2[[\"day\"]])\n\nX_2[\"hour_sin\"] = sin_transformer(24).fit_transform(X_2[[\"hour\"]])\nX_2[\"hour_cos\"] = cos_transformer(24).fit_transform(X_2[[\"hour\"]])\n\nX_2[\"winddirection_sin\"] = sin_transformer(360).fit_transform(X_2[[\"winddirection\"]])\nX_2[\"winddirection_cos\"] = cos_transformer(360).fit_transform(X_2[[\"winddirection\"]])\n\nfig, ax = plt.subplots(3, 1, sharex=True, figsize=(300,8))\nX_2[[\"month_sin\", \"month_cos\"]].plot(ax=ax[0])\nX_2[[\"day_sin\", \"day_cos\"]].plot(ax=ax[1])\nX_2[[\"winddirection_sin\", \"winddirection_cos\"]].plot(ax=ax[2])\nplt.suptitle(\"Cyclical encoding with sine/cosine transformation\");"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"X_2":{"type":"table"},"plt":{"type":"image"}},"fid":"f8tsrw6spzjq8nsx","label":"Python Script","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["t5qja96fh7px2grq"],"models":["tz6h32ht2j2p2x9t"],"images":[]},"outputs":{"X_2":"tn22bhwxc9r4yg2u","plt":"thcnfdntmndjkgrm"},"param":{"script":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import date\nfrom sklearn.preprocessing import FunctionTransformer\n\ndef sin_transformer(period):\n    return FunctionTransformer(lambda x: np.sin(x / period * 2 * np.pi))\n  \ndef cos_transformer(period):\n    return FunctionTransformer(lambda x: np.cos(x / period * 2 * np.pi))\n\nX_2 = inputs[0]\n\nX_2[\"month_sin\"] = sin_transformer(12).fit_transform(X_2[[\"month\"]])\nX_2[\"month_cos\"] = cos_transformer(12).fit_transform(X_2[[\"month\"]])\n\nX_2[\"day_sin\"] = sin_transformer(30).fit_transform(X_2[[\"day\"]])\nX_2[\"day_cos\"] = cos_transformer(30).fit_transform(X_2[[\"day\"]])\n\nX_2[\"hour_sin\"] = sin_transformer(24).fit_transform(X_2[[\"hour\"]])\nX_2[\"hour_cos\"] = cos_transformer(24).fit_transform(X_2[[\"hour\"]])\n\nX_2[\"winddirection_sin\"] = sin_transformer(360).fit_transform(X_2[[\"winddirection\"]])\nX_2[\"winddirection_cos\"] = cos_transformer(360).fit_transform(X_2[[\"winddirection\"]])\n\nfig, ax = plt.subplots(3, 1, sharex=True, figsize=(300,8))\nX_2[[\"month_sin\", \"month_cos\"]].plot(ax=ax[0])\nX_2[[\"day_sin\", \"day_cos\"]].plot(ax=ax[1])\nX_2[[\"winddirection_sin\", \"winddirection_cos\"]].plot(ax=ax[2])\nplt.suptitle(\"Cyclical encoding with sine/cosine transformation\");"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"X_2":{"type":"table"},"plt":{"type":"image"}},"fid":"f9zmkx93wjdd3jen","label":"Python Script","persist":true,"skip":false},{"persist-mode":"auto","func":"pythonScript","name":"PythonScript","inputs":{"inputs":["tkzpvsjfgn6aak2g"],"models":["ta5kjyg8by5g7bet"],"images":[]},"outputs":{"X_2":"tqprn3dc7vfhy84t","plt":"tx4tgpg4vehyjzpw"},"param":{"script":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import date\nfrom sklearn.preprocessing import FunctionTransformer\n\ndef sin_transformer(period):\n    return FunctionTransformer(lambda x: np.sin(x / period * 2 * np.pi))\n  \ndef cos_transformer(period):\n    return FunctionTransformer(lambda x: np.cos(x / period * 2 * np.pi))\n\nX_2 = inputs[0]\n\nX_2[\"month_sin\"] = sin_transformer(12).fit_transform(X_2[[\"month\"]])\nX_2[\"month_cos\"] = cos_transformer(12).fit_transform(X_2[[\"month\"]])\n\nX_2[\"day_sin\"] = sin_transformer(30).fit_transform(X_2[[\"day\"]])\nX_2[\"day_cos\"] = cos_transformer(30).fit_transform(X_2[[\"day\"]])\n\nX_2[\"hour_sin\"] = sin_transformer(24).fit_transform(X_2[[\"hour\"]])\nX_2[\"hour_cos\"] = cos_transformer(24).fit_transform(X_2[[\"hour\"]])\n\nX_2[\"winddirection_sin\"] = sin_transformer(360).fit_transform(X_2[[\"winddirection\"]])\nX_2[\"winddirection_cos\"] = cos_transformer(360).fit_transform(X_2[[\"winddirection\"]])\n\nfig, ax = plt.subplots(3, 1, sharex=True, figsize=(300,8))\nX_2[[\"month_sin\", \"month_cos\"]].plot(ax=ax[0])\nX_2[[\"day_sin\", \"day_cos\"]].plot(ax=ax[1])\nX_2[[\"winddirection_sin\", \"winddirection_cos\"]].plot(ax=ax[2])\nplt.suptitle(\"Cyclical encoding with sine/cosine transformation\");"},"version":"3.6","context":"python","meta":{"inputs":{"type":"table","range":{"min":1,"max":10}},"models":{"type":"model","range":{"min":1,"max":10}},"images":{"type":"image","range":{"min":1,"max":10}},"X_2":{"type":"table"},"plt":{"type":"image"}},"fid":"f28942y548wx67sn","label":"Python Script","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.extraction$scale","name":"brightics.function.extraction$scale","param":{"scaler":"StandardScaler","input_cols":["일조","일사","temperature","windspeed","winddirection","humidity","전운량"],"suffix":"_robust"},"meta":{"table":{"type":"table","desc":"Data in a table","optional":false},"out_table":{"type":"table","desc":""},"model":{"type":"model","desc":"Normalized data"}},"context":"python","version":"3.6","inputs":{"table":"t6phgdqd6xztbxtd"},"outputs":{"out_table":"t5qja96fh7px2grq","model":"tz6h32ht2j2p2x9t"},"fid":"fkzd8fk8xmugq9yd","label":"Normalization","persist":true,"skip":false},{"persist-mode":"auto","func":"brightics.function.extraction$scale","name":"brightics.function.extraction$scale","param":{"scaler":"StandardScaler","input_cols":["일조","일사","temperature","windspeed","winddirection","humidity","전운량"],"suffix":"_robust"},"meta":{"table":{"type":"table","desc":"Data in a table","optional":false},"out_table":{"type":"table","desc":""},"model":{"type":"model","desc":"Normalized data"}},"context":"python","version":"3.6","inputs":{"table":"txfftyhfvrqrbfa3"},"outputs":{"out_table":"tkzpvsjfgn6aak2g","model":"ta5kjyg8by5g7bet"},"fid":"fb5ffawnc7nrqwcw","label":"Normalization","persist":true,"skip":false}],"links":[{"kid":"kq4un39jhh275b7y","sourceFid":"fmn578mrb3z8ffzu","targetFid":"fgc4aazrsejy7vdz"},{"kid":"kvu43fjugkavmpjx","sourceFid":"fgc4aazrsejy7vdz","targetFid":"fkxxe962tqpfkq7c"},{"kid":"kz8m3cdn2r8ntcc8","sourceFid":"fkxxe962tqpfkq7c","targetFid":"fcmep5kshntn5fn3"},{"kid":"kdyzj5jhdde8z9gj","sourceFid":"f7tth8gaut35xe9j","targetFid":"fjh7kh2dy8hwuc72"},{"kid":"krensy5kgjt35kh7","sourceFid":"fjh7kh2dy8hwuc72","targetFid":"fztr6cvvktkbhpm5"},{"kid":"kyubqvy7pyufyxpu","sourceFid":"fmezk7gj6aeyq8rt","targetFid":"fhdwenv24g6p34rd"},{"kid":"ksnepq95qpudv4fs","sourceFid":"fhdwenv24g6p34rd","targetFid":"fz44tgcm5nedprn9"},{"kid":"k8tckmc2t9pt5vbw","sourceFid":"fcmep5kshntn5fn3","targetFid":"fgfrj77z3ybgfee9"},{"kid":"kpqz72ktfyr77c22","sourceFid":"fgfrj77z3ybgfee9","targetFid":"fjh7kh2dy8hwuc72"},{"kid":"ky2gcwvpsqsaqcph","sourceFid":"fgfrj77z3ybgfee9","targetFid":"fhdwenv24g6p34rd"},{"kid":"kmeq8xrthk278z43","sourceFid":"fn69v42qd5hkdw7c","targetFid":"fgxzqhqvbc2fpfbm"},{"kid":"krg4ttgmtafpdb8b","sourceFid":"fjgydpye6xuvqp6s","targetFid":"fxwgz6a7afptg4g5"},{"kid":"knguanhcvyq66tbw","sourceFid":"fxwgz6a7afptg4g5","targetFid":"f3zaszmkdddfex9s"},{"kid":"k2cp9h2q7mph4nc7","sourceFid":"f3zaszmkdddfex9s","targetFid":"fqugq4mxe779zp6y"},{"kid":"k4wx58vyuvbvhmp7","sourceFid":"fqugq4mxe779zp6y","targetFid":"fyvd9xyk36q8e3b2"},{"kid":"kwphhbzk937yw7k9","sourceFid":"fqugq4mxe779zp6y","targetFid":"f7tth8gaut35xe9j"},{"kid":"kqpfawguuf9kte26","sourceFid":"fyt89jqntftb5nev","targetFid":"f2e2ze6gk2bckdwm"},{"kid":"k6bjmnywqbnzsj76","sourceFid":"fx49hyj2extxu74f","targetFid":"fx24d4nknvwudnjc"},{"kid":"kdr93hd9sjmsnvg6","sourceFid":"fyvd9xyk36q8e3b2","targetFid":"fx49hyj2extxu74f"},{"kid":"kxuvaqjueh8ny74y","sourceFid":"fgfrj77z3ybgfee9","targetFid":"fx49hyj2extxu74f"},{"kid":"khs2eqdync6b8dr2","sourceFid":"f2e2ze6gk2bckdwm","targetFid":"f6atvcncnwe4gsme"},{"kid":"kqav9mpgqz9rzhh6","sourceFid":"f6atvcncnwe4gsme","targetFid":"fdsubpnkprxf9rkg"},{"kid":"k5d4db2yeuntup85","sourceFid":"ff4vjpbgyneha2vn","targetFid":"fn69v42qd5hkdw7c"},{"kid":"k8d3tgduytgfk928","sourceFid":"fztr6cvvktkbhpm5","targetFid":"fbnygzrhvfgd32kh"},{"kid":"ke78rux656t3pxm7","sourceFid":"fz44tgcm5nedprn9","targetFid":"fp3avynaubamb9q7"},{"kid":"k62wrjnkr4w9d86x","sourceFid":"fyw2fsszjw2xck8q","targetFid":"f2ymk7uukbu65bp5"},{"kid":"kecvs5f42bmtmuam","sourceFid":"f2ymk7uukbu65bp5","targetFid":"fxdq642kabkz36tt"},{"kid":"knwex3hug56svu7j","sourceFid":"fbnygzrhvfgd32kh","targetFid":"fstzq9mfw33w2a2n"},{"kid":"kv8q2q546mb4q283","sourceFid":"fp3avynaubamb9q7","targetFid":"f8tsrw6spzjq8nsx"},{"kid":"kyrsere8afnyb9km","sourceFid":"fstzq9mfw33w2a2n","targetFid":"fyw2fsszjw2xck8q"},{"kid":"kt7v545hqm5w6q4g","sourceFid":"f8tsrw6spzjq8nsx","targetFid":"f2ymk7uukbu65bp5"},{"kid":"kb6kqtnmp4yy9wgr","sourceFid":"f9zmkx93wjdd3jen","targetFid":"fyt89jqntftb5nev"},{"kid":"kh9yr25sk6kew3q8","sourceFid":"ff4vjpbgyneha2vn","targetFid":"fmezk7gj6aeyq8rt"},{"kid":"kahkek37p4fmsag4","sourceFid":"f28942y548wx67sn","targetFid":"f2e2ze6gk2bckdwm"},{"kid":"ktms8e7r3sm2fd3r","sourceFid":"fx24d4nknvwudnjc","targetFid":"fkzd8fk8xmugq9yd"},{"kid":"k6bc4mzjxchy8ukz","sourceFid":"fgxzqhqvbc2fpfbm","targetFid":"fb5ffawnc7nrqwcw"},{"kid":"k4amkbn4vsjqe7a5","sourceFid":"fkzd8fk8xmugq9yd","targetFid":"f9zmkx93wjdd3jen"},{"kid":"kccp6crbyfzgqntm","sourceFid":"fb5ffawnc7nrqwcw","targetFid":"f28942y548wx67sn"}],"mid":"mg9xjzn78kuduv3j","title":"Solar Power Prediction","persist-mode":"auto","diagram":{"PAPER_MARGIN_TOP":20,"PAPER_MARGIN_LEFT":20,"FIGURE_WIDTH":195,"FIGURE_HEIGHT":60,"GAP_WIDTH":55,"GAP_HEIGHT":40},"entries":["fmn578mrb3z8ffzu","fjgydpye6xuvqp6s","ff4vjpbgyneha2vn"],"optModels":{}}},"version":"3.6"}